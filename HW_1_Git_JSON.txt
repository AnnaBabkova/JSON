JSON
 1. Создать внешний репозиторий c названием JSON.
войти в аккаунт в Github
нажать вверху слева в меню "new repository"
ввести Repository name - JSON
проставить отметку "Public"
проставить отметку "Add a README file"
нажать внизу "create repository"

 2. Клонировать репозиторий JSON на локальный компьютер.
в Github войти в созданный репозиторий "JSON"
в вкладке "code" переключится на SSH и скопировать адрес репозитория  
в GitBash ввести команду git clone и вставить адрес внешнего репозитория JSON

 3. Внутри локального JSON создать файл “new.json”.
cd JSON
touch new.json

 4. Добавить файл под гит.
git sastus
git add 'new.json'

 5. Закоммитить файл.
git commit 'new file'

 6. Отправить файл на внешний GitHub репозиторий.
git push

 7. Отредактировать содержание файла “new.json” - написать информацию о себе 
(ФИО, возраст, количество домашних животных, будущая желаемая зарплата). 
Всё написать в формате JSON.
 cat >> new.json
Бобкова Анна Александровна
35 лет
домашние животные - один рыжий кот
желаемая зарплата 1000 у.е.
ctrl+C

 8. Отправить изменения на внешний репозиторий.
git status
git commit 'new info'
git push

 9. Создать файл preferences.json
touch preferences.json

 10. В файл preferences.json добавить информацию о своих предпочтениях 
(Любимый фильм, любимый сериал, любимая еда, любимое время года, 
сторона которую хотели бы посетить) в формате JSON.
 cat >> preferences.json
любимый фильм - пятый элемент
любимый сериал - Кости
любимая еда - стейк
любимое время года - лето
страна, которую хочу посетить - Франция
ctrl+C

 11. Создать файл sklls.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON
touch sklls.json 

cat >> sklls.json
умение рабоnать в терминале GitBash
Postman,JS
изучение клиент-сервеной архитектуры
ctrl+C

 12. Отправить сразу 2 файла на внешний репозиторий.
git status
git add .
git commit "new file"
git push

 13. На веб интерфейсе создать файл bug_report.json.
находясь в репозитории JSON нажать Add file 
- create new file 
- ввести название файла - bug_report.json
- нажать внизу commit new file

 14. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
находясь в Github
открыть файл bug_report.json
нажать Edit this file
написать текст
внизу заполнить commit changes, например new info
нажать на кнопку commit changes

 15. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON.
находясь в Github
открыть файл bug_report.json
нажать на иконку "карандаш" или Edit this file
написать баг репорт в формате json - 
{
"summary": "nothing works"
}

 16. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
внизу заполнить commit changes, например new info
нажать на кнопку commit changes

 17. Синхронизировать внешний и локальный репозиторий JSON
в GitBash
git remote -v
git fetch
git pull
